using System;
using System.IO;
  
class Program {
    static void Main(string[] args)
    {
        string file = @"M:/c/Users/King/newfile/a.txt";
  
        Console.WriteLine();
  
        Console.WriteLine("Reading File using StreamReader");
  
        // By using StreamReader
        if (File.Exists(file)) {
            // Reads file line by line
            StreamReader Textfile = new StreamReader(file);
            string line;
  
            while ((line = Textfile.ReadLine()) != null) {
                Console.WriteLine(line);
            }
  
            Textfile.Close();
  
            Console.ReadKey();
        }
        Console.WriteLine();
    }
}

using System;
using System.IO;
using System.Threading.Tasks;
using System.Text;
 
namespace FileIO
{
    class Program
    {
        static void Main(string[] args)
        {
            string dirPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
            string fileName = "B.txt";
 
            string longString = BuildLongString("Learn C# at wellsb.com");
 
            Task asyncTask = WriteFileAsync(dirPath, fileName, longString);
 
            //execute some code while file is written
            ExecuteSynchronousCode();
 
            Console.ReadLine();
        }
 
        static async Task WriteFileAsync(string dir, string file, string content)
        {
            Console.WriteLine("Async Write File has started.");
            using(StreamWriter outputFile = new StreamWriter(Path.Combine(dir, file)) )
            {
                await outputFile.WriteAsync(content);
            }
            Console.WriteLine("Async Write File has completed.");
        }
 
        static string BuildLongString(string content)
        {
            StringBuilder myStringBuilder = new StringBuilder("1. " + content);
            for (int i = 2; i < 1000; i++)
            {
                myStringBuilder.Append($"\r\n{i}. {content}");
            }
            return myStringBuilder.ToString();
        }
 
        static void ExecuteSynchronousCode()
        {
            Console.WriteLine();
            Console.WriteLine("Executing some code while Async task runs...");
            Console.WriteLine();
        }
    }
}